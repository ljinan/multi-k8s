Services:
    ClusterIP -> exposes a set of pods to other objects in the cluster
    NodePort -> exposes a set of pods to the outside world (only good for dev purposes)
    LoadBalancer -> legacy way of getting network traffic into a cluster
        type of service that only exposes a set of pods, if there are multiple set of pods that need exposing, a loadbalancer would not be able to expose the other set
    Ingress -> exposes a set of services to the outside world
        there are several implementation of ingress
         we are using   -> ingress-nginx , a community led project
                            github.com.kubernetes/ingress-nginx


        we are not using -> kubernetes-ingress, a project led by the company nginx
                            github.com/nginxinc/kubernetes-ingress
                             
    Ingress uses routing rules to get traffic to services -> create a controller for Ingress


Deployment is a type of 'controller'
In K8s, a controller is any type of object that constantly works to make some desired state a reality inside our cluster.

Ingress config -> object that has a set of configurations rules describing how traffic should be routed

ingress controller -> watches for changes to the ingress and updates the 'thing' that handles traffic

node using nginx ingress -> ingress controller + thing that routes traffic (conbined)
        ingress config is used to create this 
        